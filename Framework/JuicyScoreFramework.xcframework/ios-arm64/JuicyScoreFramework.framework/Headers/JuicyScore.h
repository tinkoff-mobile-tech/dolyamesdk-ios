//
//  JuicyScore.h
//  JuicyScore
//
// @license Copyright(c) 2016-2019, JuicyLabs LLC. All rights reserved.

#import <Foundation/Foundation.h>
#import <UIKit/UIKit.h>

@interface JuicyScore : NSObject

extern NSString *const onSessionIdReceived;

+ (instancetype)sharedInstance;

/// Creates instance with default parameters: sendGeo = true, sendMac = false, sendDeviceHash = true.
/// Initializes and configures required notifications, WKWebView. Loads mb.html to WKWebView from local or remote source.
- (void)create;

/// Creates instance with given parameters.
/// Initializes and configures required notifications, WKWebView. Loads mb.html to WKWebView from local or remote source.
/// @param sendGeo 'Bool' - send GeoLocation
/// @param sendMac 'Bool' - send MAC-address
/// @param sendDeviceHash 'Bool' - send deviceID hash
- (void)createWithSendGeo:(BOOL)sendGeo sendMac:(BOOL)sendMac sendDeviceHash:(BOOL)sendDeviceHash;


/// Creates instance with given parameters.
/// Initializes and configures required notifications, WKWebView. Loads mb.html to WKWebView from local or remote source.
/// @param sendGeo 'Bool' - send GeoLocation
/// @param sendMac 'Bool' - send MAC-address
/// @param sendDeviceHash 'Bool' - send deviceID hash
/// @param resourcesBundle 'NSBundle' required, if file 'mb.html' has been added not to '[NSBundle mainBundle]'
- (void)createWithSendGeo:(BOOL)sendGeo sendMac:(BOOL)sendMac sendDeviceHash:(BOOL)sendDeviceHash resourcesBundle: (NSBundle *)resourcesBundle;

/// Creates instance with given parameters.
/// Initializes and configures required notifications, WKWebView. Loads mb.html to WKWebView from local or remote source.
/// @param sendGeo 'Bool' - send GeoLocation
/// @param sendMac 'Bool' - send MAC-address
/// @param sendDeviceHash 'Bool' - send deviceID hash
/// @param resourcesBundle 'NSBundle' required, if file 'mb.html' has been added not to '[NSBundle mainBundle]'
/// @param apiKey 'NSString *' - your api key
/// @param regionalDomain 'NSString *' - regional domain
- (void)createWithSendGeo:(BOOL)sendGeo sendMac:(BOOL)sendMac sendDeviceHash:(BOOL)sendDeviceHash resourcesBundle: (NSBundle *)resourcesBundle apiKey: (NSString *)apiKey regionalDomain: (NSString *) regionalDomain;

- (void)createWithSendGeo:(BOOL)sendGeo sendMac:(BOOL)sendMac sendDeviceHash:(BOOL)sendDeviceHash resourcesBundle: (NSBundle *)resourcesBundle apiKey: (NSString *)apiKey regionalDomain: (NSString *) regionalDomain sendHostName:(BOOL)isSendHostname;

/// Enables scanning of 'dangerous ports'. Enhances scoring, but decreases performance of SDK. Disabled by default.
- (void)startCollectPorts;


/// Resumes scoring (for example, after receiving UIApplicationDidBecomeActiveNotification or viewWillAppear)
- (void)resume;

/// Pauses scoring (for example, after receiving UIApplicationDidEnterBackgroundNotification or viewDidDisappear)
- (void)pause;

/// Receive token, generated by backend. But if there is no response from backend, token is generated by library itself. By default equals to empty string.
/// @param completion to perform after receiving of token.
- (void)getSessionId:(void (^)(NSString *token))completion;

/// Get current version of JuicyScore. It takes some time to generate version. By default equals to empty string.
/// @param completion to perform after receiving of version.
- (void)getJuicyScoreVersion:(void (^)(NSString *version))completion;

/// Sets completion to perform after initialization of library.
/// @param completion to perform after initialization of library.
- (void)setOnInitComplete:(void (^)(void))completion;
- (NSString *)getSavedDataId;

/// Writes token to log.
- (void)logSessionId;

/// Defines if there is need to collect UUID of device. By default = true
@property (assign, nonatomic) BOOL collectUUID;

/// Defines if there is need to log errors. By default = true
@property (assign, nonatomic) BOOL debug;

- (void) setSendHostname:(BOOL)send;

+ (void)setDebugJs:(BOOL)debug;
+ (void)setDebugBlock:(void (^)(NSString *))callbackBlock;

+ (NSString *) mainDomain;
+ (NSString *) mbHtmlUrlString;

@end


@interface UITextField (JuicyScore)

@property (assign, nonatomic) BOOL js_ignoreInputEvents;

@end

@interface UIView (JuicyScore)

/// Need to execute for every ViewController for analyzing user's actions.
/// -(void) viewDidLoad {
///     [super viewDidLoad];
///     [self.view configureForJuicyScore];
/// }
- (void) configureForJuicyScore;


/// Configures library with excluded views.
/// @param excludedViews 'UIView' to exclude from analyzing
- (void) configureForJuicyScoreWithExcludedViews: (NSArray<UIView *> *) excludedViews;

@end

//@interface UIScrollView (JuicyScore)
//
//- (void) configureForJuicyScore;
//
//@end
